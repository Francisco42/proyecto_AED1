



    mostrarUltimasEdiciones(año de tipo int)
    COMIENZO
	aux <- listaLibros.primero
	MIENTRAS <aux <> nulo>
	    SI <aux.dato.año >= año>
		aux.imprimir
	    FIN SI
	    aux <- aux.siguiente
	FIN MIENTRAS
    FIN



    mostrarDetalles(isbn de tipo long)
    COMIENZO
	nodo <- listaLibros.buscar(isbn)
	nodo.imprimir
	nodo.dato.autores.imprimirDatos
	nodo.dato.tags.imprimirDatos
    FIN



    mostrarPorTitulo(titulo de tipo String)
    COMIENZO
	aux <- listaLibros.primero
	MIENTRAS <aux <> nulo>
	    SI <aux.dato.titulo = titulo>
		aux.imprimir
	    FIN SI
	    aux <- aux.siguiente
	FIN MIENTRAS
    FIN



    mostrarPorAño(año de tipo int)
    COMIENZO
	aux <- listaLibros.primero
	MIENTRAS <aux <> nulo>
	    SI <aux.dato.año = año>
		aux.imprimir
	    FIN SI
	    aux <- aux.siguiente
	FIN MIENTRAS
    FIN



    mostrarPorAutor(autor de tipo String)
    COMIENZO
	nodo <- listaAutores.buscar(autor)
	nodo.imprimir
    FIN



    mostrarPorTag(tag de tipo String)
    COMIENZO
	nodo <- listaTags.buscar(tag)
	nodo.imprimir
    FIN



    mostrarPorISBN(isbn de tipo long)
    COMIENZO
	nodo <- listaLibros.buscar(isbn)
	nodo.imprimir
    FIN




    eliminarAutor(autor de tipo String)
    COMIENZO
	autorAEliminar <- listaAutores.buscar(autor).dato
	librosAEliminar <- autorAEiminar.librosEscritos
	aux <- librosAEliminar.primero
	MIENTRAS <aux <> nulo>
	    listaLibros.eliminar(aux.etiqueta)
	    aux <- aux.siguiente
	FIN MIENTRAS
	listaAutores.eliminar(autor)
    FIN



    mostrarPorListaTags(tags de tipo String[])
    COMIENZO
        primerTag <- tags[0]
        aux <- buscar(primerTag)
        SI <aux <> nulo> ENTONCES
            libros <- aux.dato.librosTagged
            auxLibro <- libros.primero
            MIENTRAS <auxLibro <> nulo> HACER
                seImprime <- true
                PARA CADA String tag EN tags
                    SI <auxLibro.dato.tags.buscar(tag) = nulo> ENTONCES
                        seImprime <- false
                    FIN SI
                FIN PARA
                SI <seImprime> ENTONCES
                    auxLibro.imprimir
                FIN SI
                auxLibro <- auxLibro.siguiente
            FIN MIENTRAS
        FIN SI
    FIN



    eliminarTag(tag de tipo String)
    COMIENZO
	tagAEliminar <- listaTags.buscar(tag).dato
	librosAUntaggear <- tagAEliminar.librosTagged
	aux <- librosAUntaggear.primero
	MIENTRAS <aux <> nulo>
	    aux.tags.eliminar(tag)
	    aux <- aux.siguiente
	FIN MIENTRAS
	listaTags.eliminar(tag)
    FIN
    

