

    mostrarUltimasEdiciones(año de tipo int): LinkedList<Libro>
    COMIENZO
	listaAux <- nueva LinkedList
        PARA CADA Libro aux EN inordenDatos
            SI <aux.año >= año> ENTONCES
                listaAux.add(aux)
            FIN SI
        FIN PARA
        devuelve listaAux
    FIN



    mostrarDetalles(titulo de tipo String)
    COMIENZO
	aux <- buscar(titulo)
        SI <aux <> nulo> ENTONCES
            aux.imprimirDato
            aux.datos.autores.imprimirDatos
            aux.datos.tags.imprimirDatos
        FIN SI
    FIN






    mostrarPorTitulo(titulo de tipo String): Libro
    COMIENZO
	aux = buscar(titulo)
        SI <aux <> nulo> ENTONCES
            devuelve aux.datos
        SINO
            devuelve nulo
        FIN SI
    FIN



    mostrarPorAño(año de tipo int): LinkedList<Libro>
    COMIENZO
	listaAux <- nueva LinkedList
        PARA CADA Libro aux EN inordenDatos
            SI <aux.año = año> ENTONCES
                listaAux.add(aux)
            FIN SI
        FIN PARA
        devuelve listaAux
    FIN



    mostrarPorAutor(autor de tipo String): Lista<Libro>
    COMIENZO
	aux <- buscar(autor)
        SI <aux <> nulo> ENTONCES
            devuelve aux.datos.librosEscritos
        SI NO
            devuelve nulo
        FIN SI
    FIN	




    mostrarPorTag(tag de tipo String): Lista<Libro>
    COMIENZO
	aux <- buscar(tag)
        SI <aux <> nulo> ENTONCES
            devuelve aux.datos.librosTagged
        SI NO
            devuelve nulo
        FIN SI
    FIN




    mostrarPorISBN(isbn de tipo long): Libro
    COMIENZO
	PARA CADA Libro aux EN inordenDatos
            SI <aux.ISBN = isbn> ENTONCES
                devuelve aux
            FIN SI
        FIN PARA
        devuelve nulo
    FIN




    eliminarAutor(autor de tipo String)
    COMIENZO
	auxAutor <- arbolAutores.buscar(autor)
        SI <auxAutor <> nulo> ENTONCES
            autorAEliminar <- auxAutor.datos
            librosAEliminar <- autorAEliminar.librosEscritos
            aux <- librosAEliminar.primero
            MIENTRAS <aux <> nulo> HACER
                arbolLibros.eliminar(aux.etiqueta)
                aux <- aux.siguiente
            FIN MIENTRAS
            arbolAutores.eliminar(autor)
        FIN SI
    FIN




    eliminarTag(tag de tipo String)
    COMIENZO
	auxTag <- arbolTags.buscar(tag)
        SI <auxTag <> nulo> ENTONCES
            tagAEliminar <- auxTag.datos
            librosAUntaggear <- tagAEliminar.librosTagged
            aux <- librosAUntaggear.primero
            MIENTRAS <aux <> nulo> HACER
                auxLibro <- arbolLibros.buscar(aux.etiqueta)
                SI <auxLibro <> nulo> ENTONCES
                    libro <- auxLibro.datos
                    tags <- libro.tags
                    tags.eliminar(tag)
                    SI <tags.esVacia> ENTONCES
			sinTag <- nuevo TElementoAB(libro.titulo, libro)
                        arbolLibrosUntagged.insertar(sinTag)
                        arbolLibros.eliminar(libro.titulo)
                    FIN SI
                FIN SI
                aux <- aux.siguiente
            FIN MIENTRAS
            arbolTags.eliminar(tag)
        FIN SI
    FIN






