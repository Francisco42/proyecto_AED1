

    insertar(unNodo)
        SI <esVacia()>
            primero <- unNodo
        SINO
            aux <- primero
            MIENTRAS <aux.getSiguiente() <> nulo>
                aux <- aux.getSiguiente()
            FIN MIENTRAS
            aux.setSiguiente(unNodo);
        FIN SI




    INodo buscarLista(clave)
	listaAux <- nueva Lista
        SI <esVacia>
            devuelve nulo
        SINO
            aux <- primero
            MIENTRAS <aux <> nulo>
                SI <aux.etiqueta = clave>
                    listaAux.insertar(clonar(aux.etiqueta))
                FIN SI
                aux <- aux.siguiente
            FIN MIENTRAS
        FIN SI
        devuelve listaAux




    boolean eliminar(clave)
        SI <esVacia()>
            devuelve nulo
        FIN SI
        SI <primero.getSiguiente() = nulo>
            SI <primero.getEtiqueta() = clave>
                primero <- nulo
                devuelve verdadero
            FIN SI
        FIN SI
        aux <- primero
        SI <aux.getEtiqueta() = clave>
            temp1 <- aux
            temp <- aux.getSiguiente()
            primero <- temp
            devuelve verdadero
        FIN SI
        MIENTRAS <aux.getSiguiente() <> nulo>
            SI <aux.getSiguiente().getEtiqueta() = clave>
                temp <- aux.getSiguiente()
                aux.setSiguiente(temp.getSiguiente())
                devuelve verdadero

            FIN SI
            aux <- aux.getSiguiente()
        FIN MIENTRAS
        devuelve falso




    INodo quitar(clave)
        SI <esVacia>
            devuelve nulo
        SINO
            aux <- primero
            SI <primero.Etiqueta = clave>
                primero <- aux.siguiente
                aux.siguiente <- nulo
                devuelve aux
            SINO
                aux2 <- aux.siguiente
                MIENTRAS <aux2 <> nulo>
                    SI <aux2.etiqueta = clave>
                        aux.siguiente <- aux2.siguiente
                        aux2.siguiente <- nulo
                        devuelve aux2
                    FIN SI
                    aux <- aux2
                    aux2 <- aux2.siguiente
                FIN MIENTRAS          
            FIN SI
        FIN SI
        devuelve nulo





